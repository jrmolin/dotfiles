#!/usr/bin/env bash

DOCKER_USER_HOME_DIR=$HOME/.config/docker/home

function nginxProxy()
{
    docker run -d -p 80:80 -v /var/run/docker.sock:/tmp/docker.sock:ro jwilder/nginx-proxy:alpine
}

function webserve()
{
    PORT=80

    if [ "x${1}x" != "xx" ]
    then
        PORT=$1
    fi

    docker run --rm --name webserve -v $(pwd):/usr/share/nginx/html:ro \
    -p $PORT:80 nginx
}

function startNginx()
{
    docker run --rm --name webserver -v ~/.docker/nginx:/usr/share/nginx/html:ro \
    -p 80:80 -d nginx
}

function python3()
{
    docker run -it --rm --name python-3-script -v "$PWD":/usr/src/myapp -w /usr/src/myapp moli/python3 python $*
}

function javacDocker()
{
    docker run --rm -v "$PWD":/usr/src/myapp -w /usr/src/myapp openjdk:alpine javac $*
}

function javaDocker()
{
    docker run --rm -v "$PWD":/usr/src/myapp -w /usr/src/myapp openjdk:alpine java $*
}

function dockerPsClean()
{
    HASHES=$(docker ps -a -q -f "status=exited" | awk '{ print $1 }' )

    if test "x${HASHES}x" != "xx"
    then
        for h in "$HASHES"
        do
            docker stop $h
            docker rm $h
        done
    fi
}

function dockerImagesClean()
{
    HASHES=$(docker images | grep '<none>' | awk '{ print $3 }')

    if test "x${HASHES}x" != "xx"
    then
        for h in "${HASHES}"
        do
            echo "docker rmi $h"
            docker rmi $h
        done
    fi
}

function formatter()
{
    docker run -it --rm \
        -u $UID:$GID \
        -v `pwd`:/source formatter $*
}

function buildDeps()
{
    docker run -it --rm -v $(pwd):/source -w "/source/Dependencies_posix" \
        --entrypoint "./Rebuild-Linux.sh" \
        -u $UID:$GID \
        linux-builder
}

function buildLinux()
{
    docker run -it --rm -v $(pwd):/source -w "/source" \
        --entrypoint "./Tools/BuildScripts/Rebuild.py" \
        -u $UID:$GID \
        -e HOME=/usr/src/home \
        -v $DOCKER_USER_HOME_DIR:/usr/src/home \
        linux-builder "$*"
}

function nmap()
{
    docker run -it --rm --entrypoint nmap moli/nmap "$*"
}

function lua()
{
    docker run -it --rm \
        -v $(pwd):/usr/src/app \
        -v $DOCKER_USER_HOME_DIR:/usr/src/home \
        -e HOME=/usr/src/home \
        -w /usr/src/app moli/node $*
}

function solc()
{
    docker run -it --rm \
        -v $(pwd):/solidity \
        -v $DOCKER_USER_HOME_DIR:/usr/src/home \
        -e HOME=/usr/src/home \
        ethereum/solc:stable $*
}

#function node()
#{
#    docker run -it --rm \
#        -v $(pwd):/usr/src/app \
#        -v $DOCKER_USER_HOME_DIR:/usr/src/home \
#        -e HOME=/usr/src/home \
#        -u $UID:$GID --entrypoint node moli/alpine $*
#}

#function npm()
#{
#    docker run -it --rm \
#        -v $(pwd):/usr/src/app \
#        -v $DOCKER_USER_HOME_DIR:/usr/src/home \
#        -e HOME=/usr/src/home \
#        -u $UID:$GID --entrypoint npm moli/alpine $*
#}

#function gatsby()
#{
#    docker run -it --rm \
#        -v $(pwd):/usr/src/app \
#        -v $DOCKER_USER_HOME_DIR:/usr/src/home \
#        -e HOME=/usr/src/home \
#        -p 8000:8000 \
#        -u $UID:$GID --entrypoint=gatsby moli/alpine $*
#}

function truffle()
{
    docker run -it --rm \
        -v $(pwd):/usr/src/app \
        -v $DOCKER_USER_HOME_DIR:/usr/src/home \
        -e HOME=/usr/src/home \
        -u $UID:$GID --entrypoint truffle moli/alpine $*
}

function wget()
{
    docker run -it --rm \
        -v $(pwd):/usr/src/app \
        -v $DOCKER_USER_HOME_DIR:/usr/src/home \
        -e HOME=/usr/src/home \
        -u $UID:$GID --entrypoint wget moli/alpine $*
}

function keepass()
{
    docker run -d \
        -v /tmp/.X11-unix:/tmp/.X11-unix \
        -v /etc/machine-id:/etc/machine-id:ro \
        -v /usr/share/X11/xkb:/usr/share/X11/xkb/:ro \
        -v $HOME/.config/keepassxc:/root/.config/keepassxc \
        -e DISPLAY=unix$DISPLAY \
        keepassxc
}
